# -*- coding: utf8 -*-
#Задание №1
# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# Числа и знак операции вводятся пользователем. После выполнения вычисления программа не должна
# завершаться, а должна запрашивать новые данные для вычислений. Завершение программы должно
# выполняться при вводе символа '0' в качестве знака операции. Если пользователь вводит неверный
# знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и снова запрашивать
# знак операции. Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.

# while True:
#     print('Введите 0 в качестве знака мат.операции, если хотите выйти')
#     temp = input('Введите через пробел два числа и знак математической операции (-, +, *, /) ').split()
#     a = int(temp[0])
#     b = int(temp[1])
#     c = temp[2]
#     if c == '0':
#         print(f'Пока!')
#         break
#     while b == 0 and c == '/':
#         b = int(input('На ноль делить нельзя, введите число отличное от нуля '))
#     while c not in ['0', '+', '-', '*', '/']:
#         c = input('Вы ввели неверный знак мат. операции. Введите один из этих знаков (-, +, *, /) ')[0]
#     if c == '-':
#         print(f'Разность равна {a - b}')
#     elif c == '+':
#         print(f'Сумма равна {a + b}')
#     elif c == '*':
#         print(f'Произведение равно {round(a*b, 2)}')
#     elif c == '/':
#         print(f'Частное равно {round(a/b, 2)}')


#2. Посчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
#
# a = input('Введите целое число ')
# odd = 0
# evn = 0
# if a.isdigit():
#     for i in a:
#         if int(i)%2 == 0:
#             odd += 1
#         else:
#             evn += 1
# print(f'Четных чисел {odd}, нечётных {evn}')

#Задание №3
# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр
# и вывести на экран. Например, если введено число 3486, то надо вывести число 6843.

# print(input('Введите какое-нибудь число ')[::-1])
# чёт больно просто, прям подозрительно ) Создам-ка я себе проблему.

# a = input('Введите какое-нибудь число ')
# temp = []
# n = len(a)
# for i in list(a):
#     temp.append(list(a).pop(n-1))
#     n -= 1
# print("".join(temp))

#Задание №4
#4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...
# Количество элементов (n) вводится с клавиатуры.

# def symm(n):
#     bamp = [1/2**i for i in range(0,n)]
#     for i in range(1,len(bamp),2):
#         bamp[i] = (-1)*bamp[i]
#     print(f'сумма {n} элементов равна {sum(bamp)}, сам ряд вот такой: {bamp}')
#     return None
#
# symm(int(input('Введите количество элементов ')))

# Задание №5
# 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.
# for i in range(32,128):
#     print(f'{i:3d} : {chr(i)}', end=' ')
#     if i%10 == 0: print()

# Задание №6
# 6. В программе генерируется случайное целое число от 0 до 100.
# Пользователь должен его отгадать не более чем за 10 попыток.
# После каждой неудачной попытки должно сообщаться больше или
# меньше введенное пользователем число, чем то, что загадано.
# Если за 10 попыток число не отгадано, то вывести загаданное число.
# from random import randint, seed
#
# i = 0
# while i != 10:
#     seed(59)
#     n = randint(0, 100)
#     a = int(input('Введите число '))
#     if a == n:
#         print('Поздравляю! Вы угадали!')
#         break
#     elif a < n:
#         print('Указанное вами число меньше загаданного')
#     elif a > n:
#         print('Указанное вами число больше загаданного')
#     i += 1
# if i == 10:
#     print(f'Вы не угадали. Правильный ответ {n}')

#Задание №7
# Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел
# выполняется равенство: 1+2+...+n = n(n+1)/2, где n - любое натуральное число.
# def bar(n):
#     if n == 0:
#         return 0
#     return n + bar(n - 1)
# n = int(input('Введите число '))
# print(f'Равенство: 1+2+...+n = n(n+1)/2, доказано: {bar(n)} = {round(n*(n+1)/2)}')

#Задание №8
#8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.
# from random import randint
# n = input('Введите через пробел количество чисел и цифру, которую необходимо посчитать ').split()
# a = int(n[0])
# dig = n[1]
# temp = [randint(0,100) for _ in range(a)]
# count = 0
# for i in temp:
#     for j in str(i):
#         if j == dig:
#             count += 1
#
# print(f'Цифра {dig} встречается в введенной последовательности чисел {temp} - {count} раз')

#Задание №9
#9. Среди натуральных чисел, которые были введены,
# найти наибольшее по сумме цифр. Вывести на экран это число и сумму его цифр..
from random import randint
temp = [randint(0,1000) for _ in range(10)] #типа вводим натуральные числа )
summ = {sum([int(x) for x in str(i)]):i for i in temp}
print(f'Число {summ[max(list(summ.keys()))]} наибольшее по сумме цифр: {max(list(summ.keys()))}')
print(temp, summ)


